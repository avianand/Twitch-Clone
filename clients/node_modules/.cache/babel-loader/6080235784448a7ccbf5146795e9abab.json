{"ast":null,"code":"import { SIGN_IN, SIGN_OUT, CREATE_STREAM, DELETE_STREAM, UPDATE_STREAM, FETCH_STREAM, FETCH_STREAMS } from \"./types\";\nimport stream from \"../apis/streams\";\nexport const createStream = formValues => async (dispatch, getState) => {\n  const response = await stream.post(\"/\");\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response\n  });\n};\nexport const updateStream = async () => async (dispatch, getState) => {\n  const response = await stream.put(\"/\");\n  dispatch({\n    type: UPDATE_STREAM,\n    payload: response\n  });\n};\nexport const deleteStream = async () => async (dispatch, getState) => {\n  const response = await stream.patch(\"/\");\n  dispatch({\n    type: DELETE_STREAM,\n    payload: response\n  });\n};\nexport const getStream = async () => async (dispatch, getState) => {\n  const response = await stream.get(\"/\");\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response\n  });\n};\nexport const getStreams = async () => async (dispatch, getState) => {\n  const response = await stream.get(\"/\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response\n  });\n};\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = id => {\n  return {\n    type: SIGN_OUT\n  };\n};","map":{"version":3,"sources":["C:/Users/anand/Documents/Work/Twitch-Clone/client/src/actions/index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","DELETE_STREAM","UPDATE_STREAM","FETCH_STREAM","FETCH_STREAMS","stream","createStream","formValues","dispatch","getState","response","post","type","payload","updateStream","put","deleteStream","patch","getStream","get","getStreams","signIn","userId","signOut","id"],"mappings":"AAAA,SACEA,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,aALF,EAMEC,YANF,EAOEC,aAPF,QAQO,SARP;AASA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAO,MAAMC,YAAY,GAAIC,UAAD,IAAgB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACxE,QAAMC,QAAQ,GAAG,MAAML,MAAM,CAACM,IAAP,CAAY,GAAZ,CAAvB;AACAH,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEZ,aAAR;AAAuBa,IAAAA,OAAO,EAAEH;AAAhC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMI,YAAY,GAAG,YAAY,OAAON,QAAP,EAAiBC,QAAjB,KAA8B;AACpE,QAAMC,QAAQ,GAAG,MAAML,MAAM,CAACU,GAAP,CAAW,GAAX,CAAvB;AACAP,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEV,aAAR;AAAuBW,IAAAA,OAAO,EAAEH;AAAhC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMM,YAAY,GAAG,YAAY,OAAOR,QAAP,EAAiBC,QAAjB,KAA8B;AACpE,QAAMC,QAAQ,GAAG,MAAML,MAAM,CAACY,KAAP,CAAa,GAAb,CAAvB;AACAT,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEX,aAAR;AAAuBY,IAAAA,OAAO,EAAEH;AAAhC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMQ,SAAS,GAAG,YAAY,OAAOV,QAAP,EAAiBC,QAAjB,KAA8B;AACjE,QAAMC,QAAQ,GAAG,MAAML,MAAM,CAACc,GAAP,CAAW,GAAX,CAAvB;AACAX,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAET,YAAR;AAAsBU,IAAAA,OAAO,EAAEH;AAA/B,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMU,UAAU,GAAG,YAAY,OAAOZ,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,QAAMC,QAAQ,GAAG,MAAML,MAAM,CAACc,GAAP,CAAW,GAAX,CAAvB;AACAX,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAER,aAAR;AAAuBS,IAAAA,OAAO,EAAEH;AAAhC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMW,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLV,IAAAA,IAAI,EAAEd,OADD;AAELe,IAAAA,OAAO,EAAES;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,OAAO,GAAIC,EAAD,IAAQ;AAC7B,SAAO;AACLZ,IAAAA,IAAI,EAAEb;AADD,GAAP;AAGD,CAJM","sourcesContent":["import {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  CREATE_STREAM,\r\n  DELETE_STREAM,\r\n  UPDATE_STREAM,\r\n  FETCH_STREAM,\r\n  FETCH_STREAMS,\r\n} from \"./types\";\r\nimport stream from \"../apis/streams\";\r\n\r\nexport const createStream = (formValues) => async (dispatch, getState) => {\r\n  const response = await stream.post(\"/\");\r\n  dispatch({ type: CREATE_STREAM, payload: response });\r\n};\r\n\r\nexport const updateStream = async () => async (dispatch, getState) => {\r\n  const response = await stream.put(\"/\");\r\n  dispatch({ type: UPDATE_STREAM, payload: response });\r\n};\r\n\r\nexport const deleteStream = async () => async (dispatch, getState) => {\r\n  const response = await stream.patch(\"/\");\r\n  dispatch({ type: DELETE_STREAM, payload: response });\r\n};\r\n\r\nexport const getStream = async () => async (dispatch, getState) => {\r\n  const response = await stream.get(\"/\");\r\n  dispatch({ type: FETCH_STREAM, payload: response });\r\n};\r\n\r\nexport const getStreams = async () => async (dispatch, getState) => {\r\n  const response = await stream.get(\"/\");\r\n  dispatch({ type: FETCH_STREAMS, payload: response });\r\n};\r\n\r\nexport const signIn = (userId) => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId,\r\n  };\r\n};\r\n\r\nexport const signOut = (id) => {\r\n  return {\r\n    type: SIGN_OUT,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
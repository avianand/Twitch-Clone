{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\Documents\\\\Work\\\\Twitch-Clone\\\\client\\\\src\\\\components\\\\streams\\\\streamList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getStreams as fetchStreams } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StreamList = ({\n  fetchStreams,\n  streams\n}) => {\n  _s();\n\n  useEffect(() => {\n    fetchStreams();\n  }, []);\n\n  const renderStreams = () => {\n    streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", console.log(stream), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Id: \", stream.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Name: \", stream.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Desc: \", stream.description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", renderStreams()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n\n_s(StreamList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = StreamList;\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamList\");","map":{"version":3,"sources":["C:/Users/anand/Documents/Work/Twitch-Clone/client/src/components/streams/streamList.js"],"names":["React","useEffect","connect","getStreams","fetchStreams","StreamList","streams","renderStreams","map","stream","console","log","id","title","description","mapStateToProps","state","Object","values"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAU,IAAIC,YAAvB,QAA2C,eAA3C;;;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAED,EAAAA,YAAF;AAAgBE,EAAAA;AAAhB,CAAD,KAA+B;AAAA;;AAChDL,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMG,aAAa,GAAG,MAAM;AAC1BD,IAAAA,OAAO,CAACE,GAAR,CAAaC,MAAD,IAAY;AACtB,0BACE;AAAA,mBACG,GADH,EAEGC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAFH,eAGE;AAAA,6BAAUA,MAAM,CAACG,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,+BAAYH,MAAM,CAACI,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,+BAAYJ,MAAM,CAACK,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,sBADF;AASD,KAVD;AAWD,GAZD;;AAaA,sBAAO;AAAA,oBAAOP,aAAa,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlBD;;GAAMF,U;;KAAAA,U;;AAoBN,MAAMU,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEV,IAAAA,OAAO,EAAEW,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACV,OAApB;AAAX,GAAP;AACD,CAFD;;AAGA,eAAeJ,OAAO,CAACa,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStreams as fetchStreams } from \"../../actions\";\r\nconst StreamList = ({ fetchStreams, streams }) => {\r\n  useEffect(() => {\r\n    fetchStreams();\r\n  }, []);\r\n  const renderStreams = () => {\r\n    streams.map((stream) => {\r\n      return (\r\n        <>\r\n          {\" \"}\r\n          {console.log(stream)}\r\n          <div>Id: {stream.id}</div>\r\n          <div>Name: {stream.title} </div>\r\n          <div>Desc: {stream.description} </div>\r\n        </>\r\n      );\r\n    });\r\n  };\r\n  return <div> {renderStreams()}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { streams: Object.values(state.streams) };\r\n};\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\r\n"]},"metadata":{},"sourceType":"module"}
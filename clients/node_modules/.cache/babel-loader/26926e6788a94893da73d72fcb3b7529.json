{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\Documents\\\\Work\\\\Twitch-Clone\\\\client\\\\src\\\\components\\\\streams\\\\deleteStream.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Modal from \"../Modal\";\nimport { connect } from \"react-redux\";\nimport { deleteStream, getStream as fetchStream } from \"../../actions/index\";\nimport history from \"../../history\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StreamDelete = ({\n  id,\n  deleteStream,\n  fetchStream,\n  stream\n}) => {\n  _s();\n\n  useEffect(() => {\n    fetchStream(id);\n  }, []);\n\n  const renderActions = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui negative button\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  };\n\n  const onSubmit = id => {\n    console.log(\"delete this: \", id); // const reponse = deleteStream(id);\n    // console.log(response);\n  };\n\n  const renderContent = () => {\n    if (!stream) {\n      return \"Are you sure you want to delete this stream?\";\n    }\n\n    return `Are you sure you want to delete the stream with title: ${stream.title} ?`;\n  };\n\n  if (!stream) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"delete of streams\", /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Delete stream\",\n      content: renderContent(),\n      actions: renderActions(),\n      onSubmit: onSubmit,\n      onDismiss: () => history.push(\"/\"),\n      stream: stream\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StreamDelete, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = StreamDelete;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    id: ownProps.match.params.id,\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteStream,\n  fetchStream\n})(StreamDelete);\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamDelete\");","map":{"version":3,"sources":["C:/Users/anand/Documents/Work/Twitch-Clone/client/src/components/streams/deleteStream.js"],"names":["React","useEffect","Modal","connect","deleteStream","getStream","fetchStream","history","StreamDelete","id","stream","renderActions","onSubmit","console","log","renderContent","title","push","mapStateToProps","state","ownProps","match","params","streams"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,SAAS,IAAIC,WAApC,QAAuD,qBAAvD;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAML,EAAAA,YAAN;AAAoBE,EAAAA,WAApB;AAAiCI,EAAAA;AAAjC,CAAD,KAA+C;AAAA;;AAClET,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW,CAACG,EAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAME,aAAa,GAAG,MAAM;AAC1B,wBACE;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPD;;AASA,QAAMC,QAAQ,GAAIH,EAAD,IAAQ;AACvBI,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BL,EAA7B,EADuB,CAEvB;AACA;AACD,GAJD;;AAMA,QAAMM,aAAa,GAAG,MAAM;AAC1B,QAAI,CAACL,MAAL,EAAa;AACX,aAAO,8CAAP;AACD;;AACD,WAAQ,0DAAyDA,MAAM,CAACM,KAAM,IAA9E;AACD,GALD;;AAOA,MAAI,CAACN,MAAL,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,iDAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,OAAO,EAAEK,aAAa,EAFxB;AAGE,MAAA,OAAO,EAAEJ,aAAa,EAHxB;AAIE,MAAA,QAAQ,EAAEC,QAJZ;AAKE,MAAA,SAAS,EAAE,MAAML,OAAO,CAACU,IAAR,CAAa,GAAb,CALnB;AAME,MAAA,MAAM,EAAEP;AANV;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA5CD;;GAAMF,Y;;KAAAA,Y;;AA8CN,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLX,IAAAA,EAAE,EAAEW,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBb,EADrB;AAELC,IAAAA,MAAM,EAAES,KAAK,CAACI,OAAN,CAAcH,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBb,EAApC;AAFH,GAAP;AAID,CALD;;AAOA,eAAeN,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA,YAAF;AAAgBE,EAAAA;AAAhB,CAAlB,CAAP,CACbE,YADa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Modal from \"../Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteStream, getStream as fetchStream } from \"../../actions/index\";\r\nimport history from \"../../history\";\r\n\r\nconst StreamDelete = ({ id, deleteStream, fetchStream, stream }) => {\r\n  useEffect(() => {\r\n    fetchStream(id);\r\n  }, []);\r\n\r\n  const renderActions = () => {\r\n    return (\r\n      <div>\r\n        <button className=\"ui negative button\">Delete</button>\r\n        <button className=\"ui button\">Cancel</button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onSubmit = (id) => {\r\n    console.log(\"delete this: \", id);\r\n    // const reponse = deleteStream(id);\r\n    // console.log(response);\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (!stream) {\r\n      return \"Are you sure you want to delete this stream?\";\r\n    }\r\n    return `Are you sure you want to delete the stream with title: ${stream.title} ?`;\r\n  };\r\n\r\n  if (!stream) {\r\n    return <div> Loading ...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      delete of streams\r\n      <Modal\r\n        title=\"Delete stream\"\r\n        content={renderContent()}\r\n        actions={renderActions()}\r\n        onSubmit={onSubmit}\r\n        onDismiss={() => history.push(\"/\")}\r\n        stream={stream}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    id: ownProps.match.params.id,\r\n    stream: state.streams[ownProps.match.params.id],\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteStream, fetchStream })(\r\n  StreamDelete\r\n);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, DELETE_STREAM, FETCH_STREAM, FETCH_STREAMS, EDIT_STREAM } from \"../actions/types\";\nimport { reducer as formReducer } from \"redux-form\";\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return { ...state,\n        isSignedIn: true,\n        userId: action.payload\n      };\n\n    case SIGN_OUT:\n      return { ...state,\n        isSignedIn: false,\n        userId: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst streamReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAM:\n      return { ...streams\n      };\n\n    case FETCH_STREAMS:\n      return {};\n\n    case CREATE_STREAM:\n      return {};\n\n    case DELETE_STREAM:\n      return {};\n\n    case EDIT_STREAM:\n      {\n        return { ...state,\n          [action.payload.id]: action.payload\n        };\n      }\n\n    default:\n      return {};\n  }\n};\n\nexport default combineReducers({\n  auth: authReducer,\n  form: formReducer,\n  stream: streamReducer\n});","map":{"version":3,"sources":["C:/Users/anand/Documents/Work/Twitch-Clone/client/src/reducers/index.js"],"names":["combineReducers","SIGN_IN","SIGN_OUT","CREATE_STREAM","DELETE_STREAM","FETCH_STREAM","FETCH_STREAMS","EDIT_STREAM","reducer","formReducer","INITIAL_STATE","isSignedIn","userId","authReducer","state","action","type","payload","streamReducer","streams","id","auth","form","stream"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACEC,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,aANF,EAOEC,WAPF,QAQO,kBARP;AASA,SAASC,OAAO,IAAIC,WAApB,QAAuC,YAAvC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,IADQ;AAEpBC,EAAAA,MAAM,EAAE;AAFY,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,OAAL;AACE,aAAO,EAAE,GAAGa,KAAL;AAAYH,QAAAA,UAAU,EAAE,IAAxB;AAA8BC,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAA7C,OAAP;;AACF,SAAKf,QAAL;AACE,aAAO,EAAE,GAAGY,KAAL;AAAYH,QAAAA,UAAU,EAAE,KAAxB;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OAAP;;AACF;AACE,aAAOE,KAAP;AANJ;AAQD,CATD;;AAWA,MAAMI,aAAa,GAAG,CAACJ,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,YAAL;AACE,aAAO,EAAE,GAAGc;AAAL,OAAP;;AACF,SAAKb,aAAL;AACE,aAAO,EAAP;;AACF,SAAKH,aAAL;AACE,aAAO,EAAP;;AACF,SAAKC,aAAL;AACE,aAAO,EAAP;;AACF,SAAKG,WAAL;AAAkB;AAChB,eAAO,EAAE,GAAGO,KAAL;AAAY,WAACC,MAAM,CAACE,OAAP,CAAeG,EAAhB,GAAqBL,MAAM,CAACE;AAAxC,SAAP;AACD;;AAED;AACE,aAAO,EAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAejB,eAAe,CAAC;AAC7BqB,EAAAA,IAAI,EAAER,WADuB;AAE7BS,EAAAA,IAAI,EAAEb,WAFuB;AAG7Bc,EAAAA,MAAM,EAAEL;AAHqB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  CREATE_STREAM,\r\n  DELETE_STREAM,\r\n  FETCH_STREAM,\r\n  FETCH_STREAMS,\r\n  EDIT_STREAM,\r\n} from \"../actions/types\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nconst INITIAL_STATE = {\r\n  isSignedIn: null,\r\n  userId: null,\r\n};\r\n\r\nconst authReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return { ...state, isSignedIn: true, userId: action.payload };\r\n    case SIGN_OUT:\r\n      return { ...state, isSignedIn: false, userId: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst streamReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_STREAM:\r\n      return { ...streams };\r\n    case FETCH_STREAMS:\r\n      return {};\r\n    case CREATE_STREAM:\r\n      return {};\r\n    case DELETE_STREAM:\r\n      return {};\r\n    case EDIT_STREAM: {\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    }\r\n\r\n    default:\r\n      return {};\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  stream: streamReducer,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
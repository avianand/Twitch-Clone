{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\Documents\\\\Work\\\\Twitch-Clone\\\\client\\\\src\\\\components\\\\streams\\\\streamList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getStreams as fetchStreams } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StreamList = ({\n  fetchStreams,\n  streams,\n  currentUserId,\n  isSignedIn\n}) => {\n  _s();\n\n  useEffect(() => {\n    fetchStreams();\n  }, []);\n\n  const renderAdmin = stream => {\n    if (stream) {\n      if (currentUserId === stream.userId) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right floated content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui primary button\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui secondary button\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  };\n\n  const renderCreateButton = () => {\n    if (isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          children: \" Create Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const renderStreams = () => {\n    return streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Id: \", stream.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [\"Name: \", stream.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: [\"Desc: \", stream.description, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: renderAdmin(stream)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Streams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), console.log(\"rec\"), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui celled list\",\n      children: renderStreams()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right floated content\",\n      children: renderCreateButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StreamList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = StreamList;\n\nconst mapStateToProps = state => {\n  return {\n    currentUserId: state.auth.userId,\n    streams: Object.values(state.streams),\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamList\");","map":{"version":3,"sources":["C:/Users/anand/Documents/Work/Twitch-Clone/client/src/components/streams/streamList.js"],"names":["React","useEffect","connect","Link","getStreams","fetchStreams","StreamList","streams","currentUserId","isSignedIn","renderAdmin","stream","userId","renderCreateButton","renderStreams","map","id","title","description","console","log","mapStateToProps","state","auth","Object","values"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAU,IAAIC,YAAvB,QAA2C,eAA3C;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAED,EAAAA,YAAF;AAAgBE,EAAAA,OAAhB;AAAyBC,EAAAA,aAAzB;AAAwCC,EAAAA;AAAxC,CAAD,KAA0D;AAAA;;AAC3ER,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMK,WAAW,GAAIC,MAAD,IAAY;AAC9B,QAAIA,MAAJ,EAAY;AACV,UAAIH,aAAa,KAAKG,MAAM,CAACC,MAA7B,EAAqC;AACnC,4BACE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;AACF;AACF,GAXD;;AAaA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAIJ,UAAJ,EAAgB;AACd,0BACE;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF,GARD;;AAUA,QAAMK,aAAa,GAAG,MAAM;AAC1B,WAAOP,OAAO,CAACQ,GAAR,CAAaJ,MAAD,IAAY;AAC7B,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAA,6BAAUA,MAAM,CAACK,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,+BACSL,MAAM,CAACM,KADhB,eAEE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,iCAAoCN,MAAM,CAACO,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME;AAAA,oBAAMR,WAAW,CAACC,MAAD;AAAjB;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,SAA2BA,MAAM,CAACK,EAAlC;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXM,CAAP;AAYD,GAbD;;AAcA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGG,OAAO,CAACC,GAAR,CAAY,KAAZ,CAFH,eAGE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAAiCN,aAAa;AAA9C;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,gBAAwCD,kBAAkB;AAA1D;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAlDD;;GAAMP,U;;KAAAA,U;;AAoDN,MAAMe,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLd,IAAAA,aAAa,EAAEc,KAAK,CAACC,IAAN,CAAWX,MADrB;AAELL,IAAAA,OAAO,EAAEiB,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACf,OAApB,CAFJ;AAGLE,IAAAA,UAAU,EAAEa,KAAK,CAACC,IAAN,CAAWd;AAHlB,GAAP;AAKD,CAND;;AAOA,eAAeP,OAAO,CAACmB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getStreams as fetchStreams } from \"../../actions\";\r\n\r\nconst StreamList = ({ fetchStreams, streams, currentUserId, isSignedIn }) => {\r\n  useEffect(() => {\r\n    fetchStreams();\r\n  }, []);\r\n\r\n  const renderAdmin = (stream) => {\r\n    if (stream) {\r\n      if (currentUserId === stream.userId) {\r\n        return (\r\n          <div className=\"right floated content\">\r\n            <button className=\"ui primary button\">Edit</button>\r\n            <button className=\"ui secondary button\">Delete</button>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderCreateButton = () => {\r\n    if (isSignedIn) {\r\n      return (\r\n        <div>\r\n          <Link> Create Stream</Link>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderStreams = () => {\r\n    return streams.map((stream) => {\r\n      return (\r\n        <div className=\"item\" key={stream.id}>\r\n          <div>Id: {stream.id}</div>\r\n          <div className=\"content\">\r\n            Name: {stream.title}\r\n            <div className=\"description\">Desc: {stream.description} </div>\r\n          </div>\r\n          <div>{renderAdmin(stream)}</div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Streams</h2>\r\n      {console.log(\"rec\")}\r\n      <div className=\"ui celled list\">{renderStreams()}</div>\r\n      <div className=\"right floated content\">{renderCreateButton()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUserId: state.auth.userId,\r\n    streams: Object.values(state.streams),\r\n    isSignedIn: state.auth.isSignedIn,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\r\n"]},"metadata":{},"sourceType":"module"}
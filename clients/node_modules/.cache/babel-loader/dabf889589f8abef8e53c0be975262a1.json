{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\Documents\\\\Work\\\\Twitch-Clone\\\\client\\\\src\\\\components\\\\streams\\\\editStream.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditStream = ({\n  stream,\n  id\n}) => {\n  _s();\n\n  useEffect(() => {\n    fetchStream(id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"id: \", stream.title]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n\n_s(EditStream, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = EditStream;\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  return {\n    id: id,\n    stream: state.streams[id]\n  };\n};\n\nexport default connect(mapStateToProps, {})(EditStream);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditStream\");","map":{"version":3,"sources":["C:/Users/anand/Documents/Work/Twitch-Clone/client/src/components/streams/editStream.js"],"names":["React","connect","EditStream","stream","id","useEffect","fetchStream","title","mapStateToProps","state","ownProps","match","params","streams"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAoB;AAAA;;AACrCC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,WAAW,CAACF,EAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBAAO;AAAA,uBAAUD,MAAM,CAACI,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CALD;;GAAML,U;;KAAAA,U;;AAON,MAAMM,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMN,EAAE,GAAGM,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBR,EAAjC;AACA,SAAO;AAAEA,IAAAA,EAAE,EAAEA,EAAN;AAAUD,IAAAA,MAAM,EAAEM,KAAK,CAACI,OAAN,CAAcT,EAAd;AAAlB,GAAP;AACD,CAHD;;AAKA,eAAeH,OAAO,CAACO,eAAD,EAAkB,EAAlB,CAAP,CAA6BN,UAA7B,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst EditStream = ({ stream, id }) => {\r\n  useEffect(() => {\r\n    fetchStream(id);\r\n  }, []);\r\n  return <div>id: {stream.title}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  return { id: id, stream: state.streams[id] };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(EditStream);\r\n"]},"metadata":{},"sourceType":"module"}
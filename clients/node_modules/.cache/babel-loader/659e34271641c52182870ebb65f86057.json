{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\Documents\\\\Work\\\\Twitch-Clone\\\\client\\\\src\\\\components\\\\streams\\\\createStream.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport connect from \"react-redux\";\nimport { createStream } from \"../../actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateStream = ({\n  handleSubmit,\n  createStream\n}) => {\n  const renderInput = ({\n    input,\n    label\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderError = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"errors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  };\n\n  const formSubmit = formValues => {\n    console.log(formValues);\n    const response = createStream(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(formSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Field, {\n      name: \"title\",\n      component: renderInput,\n      label: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      name: \"description\",\n      component: renderInput,\n      label: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"ui primary button\",\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CreateStream;\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.title) {\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!values.description) {\n    errors.description = \"You must enter a description\";\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: \"streamCreate\",\n  validate\n})(CreateStream);\nexport default connect(null, {\n  createStream\n})(formWrapped);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateStream\");","map":{"version":3,"sources":["C:/Users/anand/Documents/Work/Twitch-Clone/client/src/components/streams/createStream.js"],"names":["React","Field","reduxForm","connect","createStream","CreateStream","handleSubmit","renderInput","input","label","renderError","formSubmit","formValues","console","log","response","values","validate","errors","title","description","formWrapped","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAASC,YAAT,QAA6B,qBAA7B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBF,EAAAA;AAAhB,CAAD,KAAoC;AACvD,QAAMG,WAAW,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAsB;AACxC,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,sBAAWD,KAAX;AAAkB,QAAA,YAAY,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPD;;AAQA,QAAME,WAAW,GAAG,MAAM;AACxB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD;;AAGA,QAAMC,UAAU,GAAIC,UAAD,IAAgB;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,UAAMG,QAAQ,GAAGX,YAAY,CAACY,MAAD,CAA7B;AACD,GAHD;;AAKA,sBACE;AAAM,IAAA,QAAQ,EAAEV,YAAY,CAACK,UAAD,CAA5B;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEJ,WAA/B;AAA4C,MAAA,KAAK,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,SAAS,EAAEA,WAArC;AAAkD,MAAA,KAAK,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA3BD;;KAAMF,Y;;AA6BN,MAAMY,QAAQ,GAAID,MAAD,IAAY;AAC3B,QAAME,MAAM,GAAG,EAAf;;AACA,MAAI,CAACF,MAAM,CAACG,KAAZ,EAAmB;AACjBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACD;;AACD,MAAI,CAACH,MAAM,CAACI,WAAZ,EAAyB;AACvBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACD;;AACD,SAAOF,MAAP;AACD,CATD;;AAWA,MAAMG,WAAW,GAAGnB,SAAS,CAAC;AAAEoB,EAAAA,IAAI,EAAE,cAAR;AAAwBL,EAAAA;AAAxB,CAAD,CAAT,CAA8CZ,YAA9C,CAApB;AAEA,eAAeF,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAAgCiB,WAAhC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport connect from \"react-redux\";\r\nimport { createStream } from \"../../actions/index\";\r\n\r\nconst CreateStream = ({ handleSubmit, createStream }) => {\r\n  const renderInput = ({ input, label }) => {\r\n    return (\r\n      <div className=\"field\">\r\n        <div>{label}</div>\r\n        <input {...input} autoComplete=\"off\" />\r\n      </div>\r\n    );\r\n  };\r\n  const renderError = () => {\r\n    return <div>errors</div>;\r\n  };\r\n  const formSubmit = (formValues) => {\r\n    console.log(formValues);\r\n    const response = createStream(values);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(formSubmit)}>\r\n      <Field name=\"title\" component={renderInput} label=\"Title\" />\r\n      <Field name=\"description\" component={renderInput} label=\"Description\" />\r\n      <br />\r\n      <button type=\"submit\" className=\"ui primary button\">\r\n        Create\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.title) {\r\n    errors.title = \"You must enter a title\";\r\n  }\r\n  if (!values.description) {\r\n    errors.description = \"You must enter a description\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst formWrapped = reduxForm({ form: \"streamCreate\", validate })(CreateStream);\r\n\r\nexport default connect(null, { createStream })(formWrapped);\r\n"]},"metadata":{},"sourceType":"module"}
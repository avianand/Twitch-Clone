{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\Documents\\\\Work\\\\Twitch-Clone\\\\client\\\\src\\\\components\\\\streams\\\\showStream.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport flv from \"flv.js\";\nimport { getStream as fetchStream } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowStream = ({\n  stream,\n  id,\n  fetchStream\n}) => {\n  _s();\n\n  const videoRef = useRef(null);\n  useEffect(() => {\n    fetchStream(id);\n    buildPlayer();\n  }, []);\n\n  const buildPlayer = () => {\n    const player = null;\n\n    if (player || !stream) {\n      return;\n    }\n\n    console.log(id);\n    player = flv.createPlayer({\n      type: \"flv\",\n      url: `http://localhost:8000/live/${id}.flv`\n    });\n    player.attachMediaElement(videoRef.current);\n    player.load();\n  };\n\n  if (!stream) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        width: \"100%\"\n      },\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: stream.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: stream.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShowStream, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n\n_c = ShowStream;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    id: ownProps.match.params.id,\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(ShowStream);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowStream\");","map":{"version":3,"sources":["C:/Users/anand/Documents/Work/Twitch-Clone/client/src/components/streams/showStream.js"],"names":["React","useEffect","useRef","connect","flv","getStream","fetchStream","ShowStream","stream","id","videoRef","buildPlayer","player","console","log","createPlayer","type","url","attachMediaElement","current","load","width","title","description","mapStateToProps","state","ownProps","match","params","streams"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,SAAS,IAAIC,WAAtB,QAAyC,eAAzC;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,EAAV;AAAcH,EAAAA;AAAd,CAAD,KAAiC;AAAA;;AAClD,QAAMI,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW,CAACG,EAAD,CAAX;AACAE,IAAAA,WAAW;AACZ,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,WAAW,GAAG,MAAM;AACxB,UAAMC,MAAM,GAAG,IAAf;;AACA,QAAIA,MAAM,IAAI,CAACJ,MAAf,EAAuB;AACrB;AACD;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ;AACAG,IAAAA,MAAM,GAAGR,GAAG,CAACW,YAAJ,CAAiB;AACxBC,MAAAA,IAAI,EAAE,KADkB;AAExBC,MAAAA,GAAG,EAAG,8BAA6BR,EAAG;AAFd,KAAjB,CAAT;AAIAG,IAAAA,MAAM,CAACM,kBAAP,CAA0BR,QAAQ,CAACS,OAAnC;AACAP,IAAAA,MAAM,CAACQ,IAAP;AACD,GAZD;;AAcA,MAAI,CAACZ,MAAL,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAO,MAAA,GAAG,EAAEE,QAAZ;AAAsB,MAAA,KAAK,EAAE;AAAEW,QAAAA,KAAK,EAAE;AAAT,OAA7B;AAAgD,MAAA,QAAQ;AAAxD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAAyBb,MAAM,CAACc;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAA8Bd,MAAM,CAACe;AAArC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA/BD;;GAAMhB,U;;KAAAA,U;;AAiCN,MAAMiB,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLjB,IAAAA,EAAE,EAAEiB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBnB,EADrB;AAELD,IAAAA,MAAM,EAAEiB,KAAK,CAACI,OAAN,CAAcH,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBnB,EAApC;AAFH,GAAP;AAID,CALD;;AAOA,eAAeN,OAAO,CAACqB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport flv from \"flv.js\";\r\nimport { getStream as fetchStream } from \"../../actions\";\r\n\r\nconst ShowStream = ({ stream, id, fetchStream }) => {\r\n  const videoRef = useRef(null);\r\n  useEffect(() => {\r\n    fetchStream(id);\r\n    buildPlayer();\r\n  }, []);\r\n\r\n  const buildPlayer = () => {\r\n    const player = null;\r\n    if (player || !stream) {\r\n      return;\r\n    }\r\n    console.log(id);\r\n    player = flv.createPlayer({\r\n      type: \"flv\",\r\n      url: `http://localhost:8000/live/${id}.flv`,\r\n    });\r\n    player.attachMediaElement(videoRef.current);\r\n    player.load();\r\n  };\r\n\r\n  if (!stream) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div className=\"content\">\r\n      <video ref={videoRef} style={{ width: \"100%\" }} controls />\r\n      <div className=\"header\">{stream.title}</div>\r\n      <div className=\"description\">{stream.description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    id: ownProps.match.params.id,\r\n    stream: state.streams[ownProps.match.params.id],\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStream })(ShowStream);\r\n"]},"metadata":{},"sourceType":"module"}
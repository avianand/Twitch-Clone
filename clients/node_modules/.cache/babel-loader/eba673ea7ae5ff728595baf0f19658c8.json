{"ast":null,"code":"import { SIGN_IN, SIGN_OUT, CREATE_STREAM, DELETE_STREAM, EDIT_STREAM, FETCH_STREAM, FETCH_STREAMS } from \"./types\";\nimport stream from \"../apis/streams\";\nexport const createStream = formValues => async (dispatch, getState) => {\n  const userId = getState.userId;\n  const response = await stream.post(\"/streams\", formValues);\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = async (id, formValues) => async (dispatch, getState) => {\n  const response = await stream.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = async id => async (dispatch, getState) => {\n  const response = await stream.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};\nexport const getStream = async id => async (dispatch, getState) => {\n  const response = await stream.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const getStreams = () => async (dispatch, getState) => {\n  const response = await stream.get(\"/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = id => {\n  return {\n    type: SIGN_OUT\n  };\n};","map":{"version":3,"sources":["C:/Users/anand/Documents/Work/Twitch-Clone/client/src/actions/index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","DELETE_STREAM","EDIT_STREAM","FETCH_STREAM","FETCH_STREAMS","stream","createStream","formValues","dispatch","getState","userId","response","post","type","payload","data","editStream","id","put","deleteStream","delete","getStream","get","getStreams","signIn","signOut"],"mappings":"AAAA,SACEA,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,aAPF,QAQO,SARP;AASA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAO,MAAMC,YAAY,GAAIC,UAAD,IAAgB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACxE,QAAMC,MAAM,GAAGD,QAAQ,CAACC,MAAxB;AACA,QAAMC,QAAQ,GAAG,MAAMN,MAAM,CAACO,IAAP,CAAY,UAAZ,EAAwBL,UAAxB,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAEb,aAAR;AAAuBc,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMC,UAAU,GAAG,OAAOC,EAAP,EAAWV,UAAX,KAA0B,OAClDC,QADkD,EAElDC,QAFkD,KAG/C;AACH,QAAME,QAAQ,GAAG,MAAMN,MAAM,CAACa,GAAP,CAAY,YAAWD,EAAG,EAA1B,EAA6BV,UAA7B,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAEX,WAAR;AAAqBY,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAvC,GAAD,CAAR;AACD,CANM;AAQP,OAAO,MAAMI,YAAY,GAAG,MAAOF,EAAP,IAAc,OAAOT,QAAP,EAAiBC,QAAjB,KAA8B;AACtE,QAAME,QAAQ,GAAG,MAAMN,MAAM,CAACe,MAAP,CAAe,YAAWH,EAAG,EAA7B,CAAvB;AACAT,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAEZ,aAAR;AAAuBa,IAAAA,OAAO,EAAEG;AAAhC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMI,SAAS,GAAG,MAAOJ,EAAP,IAAc,OAAOT,QAAP,EAAiBC,QAAjB,KAA8B;AACnE,QAAME,QAAQ,GAAG,MAAMN,MAAM,CAACiB,GAAP,CAAY,YAAWL,EAAG,EAA1B,CAAvB;AACAT,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAEV,YAAR;AAAsBW,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMQ,UAAU,GAAG,MAAM,OAAOf,QAAP,EAAiBC,QAAjB,KAA8B;AAC5D,QAAME,QAAQ,GAAG,MAAMN,MAAM,CAACiB,GAAP,CAAW,UAAX,CAAvB;AAEAd,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAET,aAAR;AAAuBU,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMS,MAAM,GAAId,MAAD,IAAY;AAChC,SAAO;AACLG,IAAAA,IAAI,EAAEf,OADD;AAELgB,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMe,OAAO,GAAIR,EAAD,IAAQ;AAC7B,SAAO;AACLJ,IAAAA,IAAI,EAAEd;AADD,GAAP;AAGD,CAJM","sourcesContent":["import {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  CREATE_STREAM,\r\n  DELETE_STREAM,\r\n  EDIT_STREAM,\r\n  FETCH_STREAM,\r\n  FETCH_STREAMS,\r\n} from \"./types\";\r\nimport stream from \"../apis/streams\";\r\n\r\nexport const createStream = (formValues) => async (dispatch, getState) => {\r\n  const userId = getState.userId;\r\n  const response = await stream.post(\"/streams\", formValues);\r\n  dispatch({ type: CREATE_STREAM, payload: response.data });\r\n};\r\n\r\nexport const editStream = async (id, formValues) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const response = await stream.put(`/streams/${id}`, formValues);\r\n  dispatch({ type: EDIT_STREAM, payload: response.data });\r\n};\r\n\r\nexport const deleteStream = async (id) => async (dispatch, getState) => {\r\n  const response = await stream.delete(`/streams/${id}`);\r\n  dispatch({ type: DELETE_STREAM, payload: id });\r\n};\r\n\r\nexport const getStream = async (id) => async (dispatch, getState) => {\r\n  const response = await stream.get(`/streams/${id}`);\r\n  dispatch({ type: FETCH_STREAM, payload: response.data });\r\n};\r\n\r\nexport const getStreams = () => async (dispatch, getState) => {\r\n  const response = await stream.get(\"/streams\");\r\n\r\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\r\n};\r\n\r\nexport const signIn = (userId) => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId,\r\n  };\r\n};\r\n\r\nexport const signOut = (id) => {\r\n  return {\r\n    type: SIGN_OUT,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { SIGN_IN, SIGN_OUT, CREATE_STREAM, DELETE_STREAM, EDIT_STREAM, FETCH_STREAM, FETCH_STREAMS } from \"./types\";\nimport stream from \"../apis/streams\";\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await stream.post(\"/streams\", { ...formValues,\n    userId: userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: payloadArray\n  });\n};\nexport const editStream = async (id, formValues) => async (dispatch, getState) => {\n  const response = await stream.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = async id => async (dispatch, getState) => {\n  const response = await stream.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};\nexport const getStream = async id => async (dispatch, getState) => {\n  const response = await stream.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const getStreams = () => async (dispatch, getState) => {\n  const response = await stream.get(\"/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = id => {\n  return {\n    type: SIGN_OUT\n  };\n};","map":{"version":3,"sources":["C:/Users/anand/Documents/Work/Twitch-Clone/client/src/actions/index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","DELETE_STREAM","EDIT_STREAM","FETCH_STREAM","FETCH_STREAMS","stream","createStream","formValues","dispatch","getState","userId","auth","response","post","type","payload","payloadArray","editStream","id","put","data","deleteStream","delete","getStream","get","getStreams","signIn","signOut"],"mappings":"AAAA,SACEA,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,aAPF,QAQO,SARP;AASA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAO,MAAMC,YAAY,GAAIC,UAAD,IAAgB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACxE,QAAM;AAAEC,IAAAA;AAAF,MAAaD,QAAQ,GAAGE,IAA9B;AACA,QAAMC,QAAQ,GAAG,MAAMP,MAAM,CAACQ,IAAP,CAAY,UAAZ,EAAwB,EAC7C,GAAGN,UAD0C;AAE7CG,IAAAA,MAAM,EAAEA;AAFqC,GAAxB,CAAvB;AAIAF,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEd,aAAR;AAAuBe,IAAAA,OAAO,EAAEC;AAAhC,GAAD,CAAR;AACD,CAPM;AASP,OAAO,MAAMC,UAAU,GAAG,OAAOC,EAAP,EAAWX,UAAX,KAA0B,OAClDC,QADkD,EAElDC,QAFkD,KAG/C;AACH,QAAMG,QAAQ,GAAG,MAAMP,MAAM,CAACc,GAAP,CAAY,YAAWD,EAAG,EAA1B,EAA6BX,UAA7B,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEZ,WAAR;AAAqBa,IAAAA,OAAO,EAAEH,QAAQ,CAACQ;AAAvC,GAAD,CAAR;AACD,CANM;AAQP,OAAO,MAAMC,YAAY,GAAG,MAAOH,EAAP,IAAc,OAAOV,QAAP,EAAiBC,QAAjB,KAA8B;AACtE,QAAMG,QAAQ,GAAG,MAAMP,MAAM,CAACiB,MAAP,CAAe,YAAWJ,EAAG,EAA7B,CAAvB;AACAV,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEb,aAAR;AAAuBc,IAAAA,OAAO,EAAEG;AAAhC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMK,SAAS,GAAG,MAAOL,EAAP,IAAc,OAAOV,QAAP,EAAiBC,QAAjB,KAA8B;AACnE,QAAMG,QAAQ,GAAG,MAAMP,MAAM,CAACmB,GAAP,CAAY,YAAWN,EAAG,EAA1B,CAAvB;AACAV,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEX,YAAR;AAAsBY,IAAAA,OAAO,EAAEH,QAAQ,CAACQ;AAAxC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMK,UAAU,GAAG,MAAM,OAAOjB,QAAP,EAAiBC,QAAjB,KAA8B;AAC5D,QAAMG,QAAQ,GAAG,MAAMP,MAAM,CAACmB,GAAP,CAAW,UAAX,CAAvB;AAEAhB,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEV,aAAR;AAAuBW,IAAAA,OAAO,EAAEH,QAAQ,CAACQ;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMM,MAAM,GAAIhB,MAAD,IAAY;AAChC,SAAO;AACLI,IAAAA,IAAI,EAAEhB,OADD;AAELiB,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMiB,OAAO,GAAIT,EAAD,IAAQ;AAC7B,SAAO;AACLJ,IAAAA,IAAI,EAAEf;AADD,GAAP;AAGD,CAJM","sourcesContent":["import {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  CREATE_STREAM,\r\n  DELETE_STREAM,\r\n  EDIT_STREAM,\r\n  FETCH_STREAM,\r\n  FETCH_STREAMS,\r\n} from \"./types\";\r\nimport stream from \"../apis/streams\";\r\n\r\nexport const createStream = (formValues) => async (dispatch, getState) => {\r\n  const { userId } = getState().auth;\r\n  const response = await stream.post(\"/streams\", {\r\n    ...formValues,\r\n    userId: userId,\r\n  });\r\n  dispatch({ type: CREATE_STREAM, payload: payloadArray });\r\n};\r\n\r\nexport const editStream = async (id, formValues) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const response = await stream.put(`/streams/${id}`, formValues);\r\n  dispatch({ type: EDIT_STREAM, payload: response.data });\r\n};\r\n\r\nexport const deleteStream = async (id) => async (dispatch, getState) => {\r\n  const response = await stream.delete(`/streams/${id}`);\r\n  dispatch({ type: DELETE_STREAM, payload: id });\r\n};\r\n\r\nexport const getStream = async (id) => async (dispatch, getState) => {\r\n  const response = await stream.get(`/streams/${id}`);\r\n  dispatch({ type: FETCH_STREAM, payload: response.data });\r\n};\r\n\r\nexport const getStreams = () => async (dispatch, getState) => {\r\n  const response = await stream.get(\"/streams\");\r\n\r\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\r\n};\r\n\r\nexport const signIn = (userId) => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId,\r\n  };\r\n};\r\n\r\nexport const signOut = (id) => {\r\n  return {\r\n    type: SIGN_OUT,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
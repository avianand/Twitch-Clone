{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\Documents\\\\Work\\\\Twitch-Clone\\\\client\\\\src\\\\components\\\\streams\\\\showStream.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowStream = ({\n  stream,\n  fetchStream\n}) => {\n  _s();\n\n  useEffect(() => {\n    fetchStream(id);\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" List of streams\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ShowStream, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ShowStream;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(ShowStream);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowStream\");","map":{"version":3,"sources":["C:/Users/anand/Documents/Work/Twitch-Clone/client/src/components/streams/showStream.js"],"names":["React","connect","ShowStream","stream","fetchStream","useEffect","id","cleanup","input","mapStateToProps","state","ownProps","streams","match","params"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA6B;AAAA;;AAC9CC,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,WAAW,CAACE,EAAD,CAAX;AACA,WAAO,MAAM;AACXC,MAAAA,OAAO;AACR,KAFD;AAGD,GALQ,EAKN,CAACC,KAAD,CALM,CAAT;AAMA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CARD;;GAAMN,U;;KAAAA,U;;AAUN,MAAMO,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAER,IAAAA,MAAM,EAAEO,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBR,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeL,OAAO,CAACQ,eAAD,EAAkB;AAAEL,EAAAA;AAAF,CAAlB,CAAP,CAA0CF,UAA1C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nconst ShowStream = ({ stream, fetchStream }) => {\r\n  useEffect(() => {\r\n    fetchStream(id);\r\n    return () => {\r\n      cleanup;\r\n    };\r\n  }, [input]);\r\n  return <div> List of streams</div>;\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { stream: state.streams[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStream })(ShowStream);\r\n"]},"metadata":{},"sourceType":"module"}
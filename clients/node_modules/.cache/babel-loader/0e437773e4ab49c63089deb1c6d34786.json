{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\Documents\\\\Work\\\\twitch\\\\src\\\\components\\\\GoogleAuth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GoogleAuth = () => {\n  _s();\n\n  const [signedIn, setsignedIn] = useState({\n    isSignedIn: null\n  });\n  const auth = useRef();\n  useEffect(() => {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init({\n        clientId: \"398671583439-chdv5bu5cish5kdrbfjfdmil9vfsgsnb.apps.googleusercontent.com\",\n        scope: \"email\"\n      }).then(value => {\n        auth.current = window.gapi.auth2.getAuthInstance();\n        setsignedIn({\n          isSignedIn: auth.current.isSignedIn.get()\n        });\n        auth.current.isSignedIn.listen(onAuthChange);\n      });\n    });\n  }, []);\n\n  const onAuthChange = () => {\n    setsignedIn({\n      isSignedIn: auth.current.isSignedIn.get()\n    });\n  };\n\n  const onSignInClick = () => {\n    auth.current.signIn();\n  };\n\n  const onSignOutClick = () => {\n    auth.current.signOut();\n  };\n\n  const renderAuthButton = () => {\n    if (signedIn.isSignedIn === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSignInClick,\n          className: \"ui red google button\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"google icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), \"Sign in with google\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    } else if (signedIn.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSignOutClick,\n          className: \"ui red google button\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"google icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), \"Sign Out\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSignInClick,\n          className: \"ui red google button\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"google icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), \"Sign in with google\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderAuthButton()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n};\n\n_s(GoogleAuth, \"zD+hbHU7vKPBJrHmeb9DadYuzF8=\");\n\n_c = GoogleAuth;\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleAuth\");","map":{"version":3,"sources":["C:/Users/anand/Documents/Work/twitch/src/components/GoogleAuth.js"],"names":["React","useEffect","useState","useRef","connect","signIn","signOut","GoogleAuth","signedIn","setsignedIn","isSignedIn","auth","window","gapi","load","client","init","clientId","scope","then","value","current","auth2","getAuthInstance","get","listen","onAuthChange","onSignInClick","onSignOutClick","renderAuthButton","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, signOut } from \"../actions\";\r\n\r\nconst GoogleAuth = () => {\r\n  const [signedIn, setsignedIn] = useState({ isSignedIn: null });\r\n  const auth = useRef();\r\n  useEffect(() => {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"398671583439-chdv5bu5cish5kdrbfjfdmil9vfsgsnb.apps.googleusercontent.com\",\r\n          scope: \"email\",\r\n        })\r\n        .then((value) => {\r\n          auth.current = window.gapi.auth2.getAuthInstance();\r\n          setsignedIn({ isSignedIn: auth.current.isSignedIn.get() });\r\n          auth.current.isSignedIn.listen(onAuthChange);\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  const onAuthChange = () => {\r\n    setsignedIn({ isSignedIn: auth.current.isSignedIn.get() });\r\n  };\r\n\r\n  const onSignInClick = () => {\r\n    auth.current.signIn();\r\n  };\r\n\r\n  const onSignOutClick = () => {\r\n    auth.current.signOut();\r\n  };\r\n\r\n  const renderAuthButton = () => {\r\n    if (signedIn.isSignedIn === null) {\r\n      return (\r\n        <div>\r\n          <button onClick={onSignInClick} className=\"ui red google button\">\r\n            <i className=\"google icon\" />\r\n            Sign in with google\r\n          </button>\r\n        </div>\r\n      );\r\n    } else if (signedIn.isSignedIn) {\r\n      return (\r\n        <div>\r\n          <button onClick={onSignOutClick} className=\"ui red google button\">\r\n            <i className=\"google icon\" />\r\n            Sign Out\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button onClick={onSignInClick} className=\"ui red google button\">\r\n            <i className=\"google icon\" />\r\n            Sign in with google\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <div>{renderAuthButton()}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isSignedIn: state.isSignedIn };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\r\n"]},"metadata":{},"sourceType":"module"}
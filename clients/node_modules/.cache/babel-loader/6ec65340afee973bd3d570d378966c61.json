{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\Documents\\\\Work\\\\Twitch-Clone\\\\client\\\\src\\\\components\\\\streams\\\\editStream.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { getStream as fetchStream, editStream } from \"../../actions/index\";\nimport StreamForm from \"./StreamForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditStream = ({\n  stream,\n  fetchStream,\n  id,\n  editStream\n}) => {\n  _s();\n\n  useEffect(() => {\n    fetchStream(id);\n  }, []);\n\n  const onSubmit = formValues => {\n    const response = editStream(id, formValues);\n  };\n\n  if (!stream) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(StreamForm, {\n      onSubmit: onSubmit,\n      initialValues: _.pick(stream, \"title\", \"description\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditStream, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = EditStream;\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  return {\n    id: id,\n    stream: state.streams[id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(EditStream);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditStream\");","map":{"version":3,"sources":["C:/Users/anand/Documents/Work/Twitch-Clone/client/src/components/streams/editStream.js"],"names":["React","useEffect","_","connect","getStream","fetchStream","editStream","StreamForm","EditStream","stream","id","onSubmit","formValues","response","pick","mapStateToProps","state","ownProps","match","params","streams"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAS,IAAIC,WAAtB,EAAmCC,UAAnC,QAAqD,qBAArD;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUJ,EAAAA,WAAV;AAAuBK,EAAAA,EAAvB;AAA2BJ,EAAAA;AAA3B,CAAD,KAA6C;AAAA;;AAC9DL,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,WAAW,CAACK,EAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,QAAQ,GAAIC,UAAD,IAAgB;AAC/B,UAAMC,QAAQ,GAAGP,UAAU,CAACI,EAAD,EAAKE,UAAL,CAA3B;AACD,GAFD;;AAIA,MAAI,CAACH,MAAL,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,QAAQ,EAAEE,QADZ;AAEE,MAAA,aAAa,EAAET,CAAC,CAACY,IAAF,CAAOL,MAAP,EAAe,OAAf,EAAwB,aAAxB;AAFjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CApBD;;GAAMD,U;;KAAAA,U;;AAsBN,MAAMO,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMP,EAAE,GAAGO,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBT,EAAjC;AACA,SAAO;AAAEA,IAAAA,EAAE,EAAEA,EAAN;AAAUD,IAAAA,MAAM,EAAEO,KAAK,CAACI,OAAN,CAAcV,EAAd;AAAlB,GAAP;AACD,CAHD;;AAKA,eAAeP,OAAO,CAACY,eAAD,EAAkB;AAAEV,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CACbE,UADa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStream as fetchStream, editStream } from \"../../actions/index\";\r\nimport StreamForm from \"./StreamForm\";\r\n\r\nconst EditStream = ({ stream, fetchStream, id, editStream }) => {\r\n  useEffect(() => {\r\n    fetchStream(id);\r\n  }, []);\r\n\r\n  const onSubmit = (formValues) => {\r\n    const response = editStream(id, formValues);\r\n  };\r\n\r\n  if (!stream) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <StreamForm\r\n        onSubmit={onSubmit}\r\n        initialValues={_.pick(stream, \"title\", \"description\")}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  return { id: id, stream: state.streams[id] };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStream, editStream })(\r\n  EditStream\r\n);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\Documents\\\\Work\\\\twitch\\\\src\\\\components\\\\streams\\\\createStream.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { form } from \"redux-forms/lib/containers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateStream = () => {\n  const renderInput = ({\n    formProps,\n    label\n  }) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...formProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  const renderError = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"errors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Field, {\n      name: \"title\",\n      component: renderInput,\n      label: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      name: \"description\",\n      component: renderInput,\n      label: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CreateStream;\n\nconst validate = () => {\n  if (!form.title) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"sjkdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n};\n\nexport default reduxForm({\n  form: \"streamCreate\",\n  validate\n})(CreateStream);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateStream\");","map":{"version":3,"sources":["C:/Users/anand/Documents/Work/twitch/src/components/streams/createStream.js"],"names":["React","Field","reduxForm","form","CreateStream","renderInput","formProps","label","renderError","validate","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,IAAT,QAAqB,4BAArB;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAG,CAAC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAD,KAA0B;AAC5C,wBACE;AAAA,8BACE;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,sBAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD,GAPD;;AAQA,QAAME,WAAW,GAAG,MAAM;AACxB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEH,WAA/B;AAA4C,MAAA,KAAK,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,SAAS,EAAEA,WAArC;AAAkD,MAAA,KAAK,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlBD;;KAAMD,Y;;AAoBN,MAAMK,QAAQ,GAAG,MAAM;AACrB,MAAI,CAACN,IAAI,CAACO,KAAV,EAAiB;AACf,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CAJD;;AAMA,eAAeR,SAAS,CAAC;AAAEC,EAAAA,IAAI,EAAE,cAAR;AAAwBM,EAAAA;AAAxB,CAAD,CAAT,CAA8CL,YAA9C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { form } from \"redux-forms/lib/containers\";\r\n\r\nconst CreateStream = () => {\r\n  const renderInput = ({ formProps, label }) => {\r\n    return (\r\n      <>\r\n        <div>{label}</div>\r\n        <input {...formProps} />\r\n      </>\r\n    );\r\n  };\r\n  const renderError = () => {\r\n    return <div>errors</div>;\r\n  };\r\n  return (\r\n    <div>\r\n      <Field name=\"title\" component={renderInput} label=\"Title\" />\r\n      <Field name=\"description\" component={renderInput} label=\"Description\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst validate = () => {\r\n  if (!form.title) {\r\n    return <div>sjkdf</div>;\r\n  }\r\n};\r\n\r\nexport default reduxForm({ form: \"streamCreate\", validate })(CreateStream);\r\n"]},"metadata":{},"sourceType":"module"}